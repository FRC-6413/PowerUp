// RobotBuilder Version: 2.0
//
// This file was generated by RobotBuilder. It contains sections of
// code that are automatically generated and assigned by robotbuilder.
// These sections will be updated in the future when you export to
// Java from RobotBuilder. Do not put any code or make any change in
// the blocks indicating autogenerated code or it will be lost on an
// update. Deleting the comments indicating the section will prevent
// it from being updated in the future.


package org.usfirst.frc6413.SteamWorks.commands;
import edu.wpi.first.wpilibj.command.Command;
import org.usfirst.frc6413.SteamWorks.Robot;
import org.usfirst.frc6413.SteamWorks.RobotMap;

/**
 *
 */
public class AutonomousCommand extends Command {

	double initialCount = 0;
	double countToDrive = 2;
	
    public AutonomousCommand() {
        requires(Robot.driveBase);
    }

    // Called just before this Command runs the first time
    protected void initialize() {
    	setTimeout(15);
		initialCount = RobotMap.driveBaseLFM.getPosition();
    }

    // Called repeatedly when this Command is scheduled to run
    protected void execute() {
    	double position = RobotMap.driveBaseLFM.getPosition();
    	System.out.println(position);
    	Robot.driveBase.driveForward(.2);
    }

    // Make this return true when this Command no longer needs to run execute()
    protected boolean isFinished() {
    	double position = RobotMap.driveBaseLFM.getPosition();
        return isTimedOut() || initialCount + countToDrive < position;
    }

    // Called once after isFinished returns true
    protected void end() {
		Robot.driveBase.driveForward(0);    	
    	System.out.println("Initial: " + initialCount + " - Final: " + RobotMap.driveBaseLFM.getPosition());
    }

    // Called when another command which requires one or more of the same
    // subsystems is scheduled to run
    protected void interrupted() {
    	end();
    }
}
